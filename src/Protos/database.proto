syntax = "proto3";

option csharp_namespace = "GenericDataPlatform.Protos";

package database;

service DatabaseService {
  rpc GetRecords (GetRecordsRequest) returns (GetRecordsResponse);
  rpc GetRecord (GetRecordRequest) returns (DataRecord);
  rpc InsertRecord (InsertRecordRequest) returns (InsertRecordResponse);
  rpc UpdateRecord (UpdateRecordRequest) returns (UpdateRecordResponse);
  rpc DeleteRecord (DeleteRecordRequest) returns (DeleteRecordResponse);
  rpc CountRecords (CountRecordsRequest) returns (CountRecordsResponse);
  rpc Query (QueryRequest) returns (QueryResponse);
  rpc CreateTable (CreateTableRequest) returns (CreateTableResponse);
  rpc UpdateTable (UpdateTableRequest) returns (UpdateTableResponse);
  rpc DeleteTable (DeleteTableRequest) returns (DeleteTableResponse);
}

message GetRecordsRequest {
  string source_id = 1;
  map<string, string> filters = 2;
  int32 page = 3;
  int32 page_size = 4;
}

message GetRecordsResponse {
  repeated DataRecord records = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 page_size = 4;
}

message GetRecordRequest {
  string id = 1;
}

message InsertRecordRequest {
  DataRecord record = 1;
}

message InsertRecordResponse {
  string id = 1;
}

message UpdateRecordRequest {
  DataRecord record = 1;
}

message UpdateRecordResponse {
  bool success = 1;
  string message = 2;
}

message DeleteRecordRequest {
  string id = 1;
}

message DeleteRecordResponse {
  bool success = 1;
  string message = 2;
}

message CountRecordsRequest {
  string source_id = 1;
  map<string, string> filters = 2;
}

message CountRecordsResponse {
  int64 count = 1;
}

message QueryRequest {
  string source_id = 1;
  string query = 2;
  map<string, string> parameters = 3;
}

message QueryResponse {
  repeated DataRecord records = 1;
  int32 total_count = 2;
}

message CreateTableRequest {
  string source_id = 1;
  DataSchema schema = 2;
}

message CreateTableResponse {
  bool success = 1;
  string message = 2;
}

message UpdateTableRequest {
  string source_id = 1;
  DataSchema schema = 2;
}

message UpdateTableResponse {
  bool success = 1;
  string message = 2;
}

message DeleteTableRequest {
  string source_id = 1;
}

message DeleteTableResponse {
  bool success = 1;
  string message = 2;
}

message DataRecord {
  string id = 1;
  string schema_id = 2;
  string source_id = 3;
  map<string, bytes> data = 4;
  map<string, string> metadata = 5;
  string created_at = 6;
  string updated_at = 7;
  string version = 8;
}

message DataSchema {
  string id = 1;
  string name = 2;
  string description = 3;
  string type = 4;
  repeated SchemaField fields = 5;
  SchemaVersion version = 6;
  string created_at = 7;
  string updated_at = 8;
}

message SchemaField {
  string name = 1;
  string description = 2;
  string type = 3;
  bool is_required = 4;
  bool is_array = 5;
  string default_value = 6;
  ValidationRules validation = 7;
  repeated SchemaField nested_fields = 8;
}

message ValidationRules {
  optional int32 min_length = 1;
  optional int32 max_length = 2;
  optional string pattern = 3;
  optional double min_value = 4;
  optional double max_value = 5;
  repeated string allowed_values = 6;
  optional string custom_validation = 7;
}

message SchemaVersion {
  string version_number = 1;
  string effective_date = 2;
  string previous_version = 3;
  string change_description = 4;
}
